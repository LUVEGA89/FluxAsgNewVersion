
@{
    ViewBag.Title = "Papeleria";
}
<style>
    .dl-horizontal-custom {
        margin-bottom: 0px!important;
        margin-left: 0px!important;
        padding-left: 0px!important;
    }

    table.dataTable thead .sorting::after {
        opacity: 0 !important;
        content: "\e150";
    }

    .searchable-stationery {
        text-transform: uppercase;
    }

    .green {
        background-color: #e6ffe6 !important;
    }

    .pink {
        background-color: #ffe6e6 !important;
    }
</style>

<section class="content-header">
    <h1>
        Papelería Entrega
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Papelería</a></li>
        <li class="active"> Entrega</li>
        <li class="active"> MCRC </li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-danger">
                <div style="display:none" id='otraDiv'></div>
                <div class="box-header with-border">
                    <div class="box-body">
                        <dl class="dl-horizontal dl-horizontal-custom">
                            <dt>Centro de Costos: </dt>
                            <dd id="department"></dd>
                            <dt>Usuario: </dt>
                            <dd id="email-usuario"></dd>
                            <dt>Fecha: </dt>
                            <dd id="fecha-pedido"></dd>
                        </dl>
                    </div>
                    <div id="loading-order" style="display:none;" class="overlay">
                        <i class="fa  fa fa-refresh fa-spin"></i>
                    </div>
                    <div id="loading-insert" style="display:none;" class="overlay">
                        <i class="fa  fa fa-refresh fa-spin"></i>
                    </div>
                    <div class="box-tools box-tools-custom">
                        <div class="input-group">
                            <a class="btn btn-app" name="save" id="save">
                                <i class="fa fa-send"></i> Generar pedido
                            </a>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" id="crud_table">
                            <thead>
                                <tr>
                                    <th>Codigo</th>
                                    <th>Nombre</th>
                                    <th>Comentario</th>
                                    <th>Cantidad</th>
                                    <th>Área</th>
                                </tr>
                            </thead>
                            <tbody id="clear-tbody-order"></tbody>
                        </table>
                        <div id="inserted_item_data"></div>
                    </div>
                </div>

            </div>
        </div>

        <div class="col-md-6">
            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">Buscar por: </h3>
                    <div id="loading-search" style="display:none;" class="overlay">
                        <i class="fa  fa fa-refresh fa-spin"></i>
                    </div>
                    <div class="box-tools">
                        <div class="input-group" style="width: 150px;">
                            <input id="input-name" class="form-control input-sm pull-right searchable-stationery" placeholder="Buscar" type="text" disabled>
                            <div class="input-group-btn">
                                <button id="search" class="btn btn-sm btn-info" onclick="searchStationery()" disabled><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-4">
                        <select class="form-control" id="cmbTipo">
                            <option value="0"> Seleccionar tipo búsqueda... </option>
                            <option value="1"> PAPELERÍA </option>
                            <option value="2"> LIMPIEZA </option>}
                            <option value="3"> UNIFORMES </option>
                            <option value="4"> REFACC </option>
                        </select>
                    </div>
                    <table class="table table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th class="th-stationery" width="50%">Nombre</th>
                                <th class="th-stationery" width="20%">Existencia</th>
                            </tr>
                        </thead>
                        <tbody id="table-search-stationery"></tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="col-md-8">
            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">Historial de pedidos</h3>
                    <div id="loading-ready" style="display:none;" class="overlay">
                        <i class="fa  fa fa-refresh fa-spin"></i>
                    </div>
                </div>
                <div class="box-body">
                    <table id="table-order-stationery-by-email" class="table table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th class="th-stationery">Folio SIE</th>
                                <th class="th-stationery">Folio SAP</th>
                                <th class="th-stationery">Nombre</th>
                                <th class="th-stationery">Subárea</th>
                                <th class="th-stationery">Fecha</th>
                                <th class="th-stationery">Cantidad</th>
                                <th class="th-stationery">Cantidad aceptada</th>
                                <th class="th-stationery">Comentario</th>
                                <th class="th-stationery">Estado</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="col-md-12">
            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">Pedidos realizados</h3>
                    <button type="button" class="btn btn-primary pull-right" onclick="ejecutaApiSap()">Sincronizar a SAP</button>
                    <div id="loading-sap" style="display:none;" class="overlay">
                        <i class="fa  fa fa-refresh fa-spin"></i>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-4">
                        <select class="form-control" id="cmbTipoSearch" style="background-color: beige">
                            <option value="0">Seleccionar tipo búsqueda de pedidos</option>
                            <option value="1">PAPELERIA</option>
                            <option value="2">LIMPIEZA</option>
                            <option value="3">UNIFORMES</option>
                            <option value="4">REFACC</option>
                        </select>
                    </div>
                    <div class="table table-responsive">
                        <table id="table-order-stationery" class="table table-bordered table-responsive">
                            <thead>
                                <tr>
                                    <th class="th-stationery">Folio SIE</th>
                                    <th class="th-stationery">Folio SAP</th>
                                    <th class="th-stationery">Centro de Costo</th>
                                    <th class="th-stationery">Nombre</th>
                                    <th class="th-stationery">Subárea</th>
                                    <th class="th-stationery">Fecha</th>
                                    <th class="th-stationery">Comentario Usuario</th>
                                    <th class="th-stationery">Comentario Sistema</th>
                                    <th class="th-stationery">Petición</th>
                                    <th class="th-stationery">Cantidad</th>
                                    <th class="th-stationery">Cantidad aceptada</th>
                                    <th class="th-stationery">Estado</th>
                                    <th class="th-stationery">Gestión</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>


</section>

<script type="text/javascript">

    initModule();//Se ejecuta al cargar la página

     function initModule() {
         buildHeaderOrder(); //Creamos la cabecera de la orden
         getOrdersUserByEmail(); //Buscamos los pedidos que ha hecho el usuario
         checkUser()//Verificamos que usuario quiere hacer entregas "yanet_chavez o ricardo_prieto"
     }
     
     function checkUser() {
         let user = localStorage.getItem("UserEmail");
         if (user == "yanet_chavez@fussionweb.com") {
             $('#cmbTipoSearch option[value="2"]').hide();
             $('#cmbTipoSearch option[value="3"]').hide();
             $('#cmbTipoSearch option[value="4"]').hide();
         }
         if (user == "ricardo_prieto@fussionweb.com") {
             $('#cmbTipoSearch option[value="1"]').hide();
         }
         
     }

     //Función que se dispara cuando se cambia el tipo de busqueda
     $("#cmbTipo").change(function (event) {
        let value = $("#cmbTipo").val();
        if (value != 0) {
            $("#input-name").removeAttr('disabled');
            $("#search").removeAttr('disabled');
         }
         $("#table-search-stationery").empty();
     });

     //Función que se dispara cuando se cambia el tipo de busqueda de las ordenes de pedidos
     $("#cmbTipoSearch").change(function (event) {
         let value = $("#cmbTipoSearch option:selected").text();
         clearTableGetOrdersUser();
         if (value != 0) {
             getOrdersUser(value);
         }
     });

     function searchStationery() {
        let ItemName = $('#input-name').val();
        let Tipo = $("#cmbTipo").val();
        $('#loading-search').show();
        $.post('@Url.Action("BuscarPapeleria", "Papeleria")', {
            ItemName,
            Tipo
        }, function (data) {
            if (data != null && $.isArray(data.Context)) {
                $("#table-search-stationery").html('');
                $.each(data.Context, function (index, value) {
                    $("#table-search-stationery").append(
                        '<tr id="tr-main-' + index + '">\
                            <td align="center"><button class="btn btn-primary" style="width: 80%; font-size:70%" onclick="return cloneInTableOrdersByUser(\'' + value.ItemCode + '\',\'' + value.ItemName + '\')">' + value.ItemName + '</button></td>\
                            <td align="center">'+ value.Stock +'</td>\
                         </tr>\>');
                    if (value.Stock == 0) {
                        $('#input-cantidad-' + index).prop('disabled', true);
                    }
                });
            } else {
                swal("No se encontraron registros");
            }
            $('#loading-search').hide();
        });
     }

    $("#input-name").keypress(function (e) {
        if (e.keyCode == 13) {
            searchStationery();
        }
    });

    //Arma la cabecera con email, fecha y departamento
    function buildHeaderOrder() {
        var FechaPedido = new Date();
        var dd = FechaPedido.getDate();
        var mm = FechaPedido.getMonth() + 1;
        var yyyy = FechaPedido.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        FechaPedido = mm + '/' + dd + '/' + yyyy;
        var Email = localStorage.getItem('UserEmail');
        $.post('@Url.Action("ObtenerInformacionUsuario", "Papeleria")', {
            Email
        }, function (data) {

            $("#email-usuario").text(Email);
            $("#fecha-pedido").text(FechaPedido);
            let Department = data.Context['AcctCode'];
            localStorage.setItem('Departamento', Department);
            $("#department").text(data.Context['departamentoNombre']);
        });
    }
    

    var pedidos = [];

    function agregarPedido(ItemCode, ItemName) {
        var res = {
            ItemCode: ItemCode,
            ItemName: ItemName
        }
        pedidos.splice(0, 0, res);
    }

    var count = 0;
    function cloneInTableOrdersByUser(ItemCode, ItemName) {
        agregarPedido(ItemCode, ItemName);
        count = count + 1;
        let Tipo = $("#cmbTipo").val();
        var Estatus = "disabled";
        var Selected = "";
        var html_code = "<tr id='row" + count + "'>";
        html_code += "<td><input type='text' name='codigo[]' value='" + ItemCode + "' size='10'/></td>";
        html_code += "<td><input type='text' name='nombre[]' value='" + ItemName + "' size='20'/></td>";
        html_code += "<td><input type='text' name='comentario[]' value='' size='10' /></td>";
        html_code += "<td><input type='number' name='cantidad[]' value='' style='width: 40px;' min='1'/></td>";
        if (Tipo == 2) {//Limpieza
            Estatus = "enabled "
            Selected = "selected";
        }

        html_code += "<td>\
                                <select style='width: 130px;' name='cmbSub[]'>\
                                    <option value='0'>NO ES NECESARIO</option>\
                                    <option value='1'" + Estatus + Selected + ">PLANTA BAJA</option>\
                                    <option value='2'" + Estatus + ">1er PISO</option>\
                                    <option value='3'" + Estatus + ">2° PISO</option>\
                                    <option value='4'" + Estatus + ">ALMACEN</option>\
                                    <option value='5'" + Estatus + ">VIGILANCIA</option>\
                                    <option value='6'" + Estatus + ">COMEDOR</option>\
                                    <option value='7'" + Estatus + ">GARANTIAS</option>\
                                    <option value='8'" + Estatus + ">ESTACIONAMIENTO</option>\
                                </select >\
                          </td> ";
        html_code += "<td><button type='button' name='remove' data-row='row" + count + "' class='btn btn-danger btn-sm remove'><i class = 'fa fa-times'></i></button></td>";
        html_code += "</tr>";
        $('#crud_table').append(html_code);
    }

    $(document).on('click', '.remove', function () {
        var delete_row = $(this).data("row");
        $('#' + delete_row).remove();
    });

    document.querySelector('#save').addEventListener('click', function (e) {
        e.preventDefault();
        swal({
            title: "¿Estas seguro?",
            text: "Usted esta a punto de generar un pedido",
            icon: "warning",
            buttons: [
              'No, cancelar esta operación',
              'Si, estoy seguro'
            ],
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {
                var Department = $("#department").text();
                var Departamento = localStorage.getItem('Departamento');
                var rowCount = $('#clear-tbody-order tr').length;

                if (rowCount == 0 || Department == 'null' || Department == 'undefined' || Departamento == 'null' || Departamento == 'undefined') {
                    swal("Error", "Favor de verificar datos como el centro de costo, la lista deberá incluir al menos un articulo", "error");
                } else
                {
                    var codigos = document.getElementsByName('codigo[]');
                    var comentarios = document.getElementsByName('comentario[]');
                    var cantidades = document.getElementsByName('cantidad[]');
                    var areas = document.getElementsByName('cmbSub[]');
                        
                    var UsuarioFolio = localStorage.getItem('UserEmail');
                    var folio = 0;
                    $.ajax({
                        contentType: "application/json; charset=utf-8",
                        url: '@Url.Action("InsertarFolio", "Papeleria")',
                        async: false,
                        timeout: 3000,
                        type: 'POST',
                        data: '{"Departamento":"' + Departamento + '","UsuarioFolio":"' + UsuarioFolio + '"}',
                        dataType: "json",
                        success: function (data) {
                            folio = data.Context;
                        },
                        error: function () {
                            swal("Error en la api: UsuarioFolio");
                        }
                    });
                    if (folio != 0) {
                        for (var i = 0; i < codigos.length; i++)
                        {

                            var codigo = codigos[i].value;
                            var comentario = comentarios[i].value;
                            var cantidad = cantidades[i].value;
                            var area = "";

                            switch (areas[i].value)
                            {
                                case "1":
                                    area = "PLANTA BAJA";
                                    break;
                                case "2":
                                    area = "1er PISO";
                                    break;
                                case "3":
                                    area = "2° PISO";
                                    break;
                                case "4":
                                    area = "ALMACEN";
                                    break;
                                case "5":
                                    area = "VIGILANCIA";
                                    break;
                                case "6":
                                    area = "COMEDOR";
                                    break;
                                case "7":
                                    area = "GARANTIAS";
                                    break;
                                case "8":
                                    area = "ESTACIONAMIENTO";
                                    break;
                                default:
                                    break;
                            }
                            localStorage.setItem("list-order-" + i, "Sku: " + codigo + " Comentario: " + comentario + " Cantidad: " + cantidad + " | ");
                            $.ajax({
                                url: '@Url.Action("InsertarPedidoPapeleria", "Papeleria")',
                                async: false,
                                timeout: 3000,
                                method: "POST",
                                data: { ItemCode: codigo, Comentario: comentario, Cantidad: cantidad, Area: area, FolioPapeleria: folio },
                                success: function (data) {
                                    swal({
                                        title: 'Pedido realizado',
                                        text: 'El registro del pedido fue realizado satisfactoriamente',
                                        icon: 'success'
                                    })
                                }
                            });
                        }
                        let tipo = $("#cmbTipoSearch option:selected").text();

                        clearTableGetOrdersUser();
                        getOrdersUser(tipo);
                        clearTableGetOrdersByEmail();
                        getOrdersUserByEmail();
                        sendEmailOrderList();
                        $("#clear-tbody-order").empty();
                    }
                    else
                    {
                        swal("Error", "Operación cancelada\n Falló al generar folio", "error");
                    }
                    
                }
            }
            else
            {
                swal("Cancelado", "Operación cancelada", "error");
            }
        });
    });


    function getOrdersUserByEmail() {
        $('#loading-ready').show();
        var UsuarioFolio = localStorage.getItem('UserEmail');
        $.post('@Url.Action("PedidosDelUsuarioByEmail", "Papeleria")', {
            UsuarioFolio
        }, function (data) {
            if (data != null && $.isArray(data.Context)) {
                var tx = $('#table-order-stationery-by-email').DataTable();
                $.each(data.Context, function (index, value) {
                    if (value.ComentarioSistema == ' ') {
                        value.ComentarioSistema = 'Sin comentario';
                    }
                    if (value.EstatusPedido == 3) {
                        value.EstatusPedido = 'En proceso';
                    }
                    if (value.EstatusPedido == 9) {
                        value.EstatusPedido = 'Aprobado';
                    }
                    if (value.EstatusPedido == 6) {
                        value.EstatusPedido = 'Rechazado';
                    }
                    if (value.SubArea == '') {
                        value.SubArea = "N/A";
                    }
                    tx.row.add([
                        '<td><strong>' + value.Foliox + '</strong></td>',
                        '<td><strong>' + value.FolioSap + '</strong></td>',
                        '<td>' + value.ItemName + '</td>',
                        '<td>' + value.SubArea + '</td>',
                        '<td>' + value.FechaPedido + '</td>',
                        '<td><strong>' + value.Cantidad + '</strong></td>',
                        '<td><strong>' + value.CantidadAprobada + '</strong></td>',
                        '<td>' + value.ComentarioSistema + '</td>',
                        '<td>' + value.EstatusPedido + '</td>'
                    ]).draw();
                });
                $('#loading-ready').hide();
            } else {
                swal("Error en la api: PedidosDelUsuarioByEmail");
            }
        });
    }
    

    //Obtener los pedidos que han realizado los usuarios para aprobar o rechazar
    function getOrdersUser(tipo) {
        $('#loading-sap').show();
        $.post('@Url.Action("PedidosDelUsuario", "Papeleria")', {
            tipo
        }, function (data) {
            if (data != null && $.isArray(data.Context)) {
                var t = $('#table-order-stationery').DataTable();
                $.each(data.Context, function (index, value) {
                    var estatus = "disabled";
                    
                    if (value.Comentario == '') {
                        value.Comentario = 'Sin comentario'
                    }
                    if (value.ComentarioSistema == ' ') {
                        value.ComentarioSistema = 'Sin comentario'
                    }
                    if (value.EstatusPedido == 3) {
                        value.EstatusPedido = 'En proceso'
                        estatus = "enabled";
                    }
                    if (value.EstatusPedido == 9) {
                        value.EstatusPedido = 'Aprobado'
                    }
                    if (value.EstatusPedido == 6) {
                        value.EstatusPedido = 'Rechazado'
                        value.FolioSap = '';
                    }
                    if (value.SubArea == '') {
                        value.SubArea = "N/A"
                    } if (value.CantidadAprobada == null)
                        value.CantidadAprobada = value.cantidad;
                    t.row.add([
                        '<td><strong>' + value.Foliox + '</strong></td>',
                        '<td><strong>' + value.FolioSap + '</strong></td>',
                        '<td>' + value.CentroCosto + '</td>',
                        '<td>' + value.ItemName + '</td>',
                        '<td>' + value.SubArea + '</td>',
                        '<td>' + value.FechaPedido + '</td>',
                        '<td>' + value.Comentario + '</td>',
                        '<td>' + value.ComentarioSistema + '</td>',
                        '<td>' + value.UsuarioFolio + '</td>',
                        '<td><strong>' + value.Cantidad + '</strong></td>',
                        '<td><input type="number" value="' + value.CantidadAprobada + '" id="input-value-' + index + '" style="width: 50px;"></td>',
                        '<td>' + value.EstatusPedido + '</td>',
                        '<td><button type="button" id="button-aprove-'+index+'" onclick="return aproveOrderStationery(' + value.Sequence + ',' + index + ',' + value.Foliox + ')" class="btn btn-success btn-sm pull-left" ' + estatus + '><span class="fa fa-thumbs-up"></span></button><button type="button" onclick="return rejectOrderStationery(' + value.Sequence + ',' + value.Foliox+ ')" class="btn btn-danger btn-sm pull-right button-custom2" ' + estatus + '><span class="fa fa-thumbs-down"></span></button></td>'
                    ]).draw().node();
                });
                $('#loading-sap').hide();
            } else {
                swal("Error en la api: PedidosDelUsuario");
            }
        });
    }
    

    function aproveOrderStationery(Sequence, index, Folio) {
        let CantidadAprobada = $('#input-value-' + index).val();
        if (CantidadAprobada == 0) {
            swal({
                title: "Error",
                text: "La cantidad aceptada no puede ser 0",
                icon: "error",
                button: true,
            })
        } else {
            swal({
            title: "¿Estas seguro?",
            text: "Se aprobara esta partida del pedido",
            icon: "warning",
            buttons: [
                'No, cancelar esta operación',
                'Si, estoy seguro'
            ],
            dangerMode: true,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    let acumulado = 0;
                    let stock = 0;
                    $.ajax({
                        contentType: "application/json; charset=utf-8",
                        url: '@Url.Action("ObtenerStockCantidad", "Papeleria")',
                        async: false,
                        timeout: 3000,
                        type: 'POST',
                        data: '{"Sequence":"' + Sequence + '"}',
                        dataType: "json",
                        success: function (data) {
                            acumulado = data.Context.Cantidad;
                            stock = data.Context.Stock;
                            
                        },
                        error: function () {
                            swal("Error en la api: ObtenerStockCantidad");
                        }
                    });
                    
                    let cantidadFinal = parseFloat(acumulado) + parseFloat(CantidadAprobada);
                    
                    if (cantidadFinal > stock) {//El pedido sobrepasa lo que hay en almacen
                        swal({
                            title: "Cantidad solicitada insuficiente",
                            text: "La cantidad aprobada sobrepasa lo que hay en stock\nSe sobrepasa por: " + (cantidadFinal -stock),
                            icon: "error",
                            button: true,
                        })
                    } else {
                        $.ajax({
                        contentType: "application/json; charset=utf-8",
                        url: '@Url.Action("ApruebaOrdenPapeleria", "Papeleria")',
                        async: false,
                        timeout: 3000,
                        type: 'POST',
                        data: '{"Sequence":"' + Sequence + '","CantidadAprobada":"' + CantidadAprobada + '","Foliox":"' + Folio + '"}',
                        dataType: "json",
                        success: function (data) {
                            swal({
                                title: "Orden aprobada",
                                text: "El registro de orden se ha aprobado correctamente",
                                icon: "success",
                                button: true,
                            }).then((fin) => {
                                let tipo = $("#cmbTipoSearch option:selected").text();
                                clearTableGetOrdersUser();
                                getOrdersUser(tipo);
                                clearTableGetOrdersByEmail();
                                getOrdersUserByEmail();
                            });
                        },
                        error: function () {
                            swal("Error en la api: ApruebaOrdenPapeleria");
                        }
                    });
                    }
                } else {
                    swal("Cancelado", "Operación cancelada", "error");
                }
            });
        }
        
    }

    function rejectOrderStationery(Sequence, Foliox, ComentarioSistema) {
        swal({
            title: "¿Esta seguro de rechazar este pedido?",
            text: "Este pedido podría ser rechazado",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {
                swal("Rechazar", {
                    content: "input",
                })
                .then((value) => {
                    let ComentarioSistema = value;
                    $.post('@Url.Action("RechazaOrdenPapeleria", "Papeleria")', {
                        Sequence,
                        Foliox,
                        ComentarioSistema,
                    }, function (data) {
                        swal({
                            title: "Orden rechazada",
                            text: "El registro de orden se ha rechazado correctamente",
                            icon: "success",
                            button: true,
                        }).then((fin) => {
                            let tipo = $("#cmbTipoSearch option:selected").text();
                            clearTableGetOrdersUser();
                            getOrdersUser(tipo);
                            clearTableGetOrdersByEmail();
                            getOrdersUserByEmail();
                        });
                    });
                });
            } else {
                swal("Este proceso ha sido cancelado");
            }
        });
    }

    function sendEmailOrderList() {

        for (let i = 0; i < 30; i++) {
            var variable = localStorage.getItem("list-order-" + i);
            html = variable;
            $('#otraDiv').append(html);
        }
        var recoger_valor = $('#otraDiv').text();
        var html = new Array;
        $.each(recoger_valor.split(/\|/).slice(0, -1), function (key, val) {
            html.push('<li>' + val + '</li>');
        });
        let BodyEmail = "<html><body><a style='color: black; font-family:Arial; ' href='https://apps.fussionweb.com/SIE/Account/Login'>Click aquí</a><hr/><div>" + html + "</div><br /></body></html>";
        let UsuarioEmail = localStorage.getItem("UserEmail");
        let Dep = $("#department").text();
        let ToEmail = "yanet_chavez@fussionweb.com";
        let ToEmail2 = "eli_alvarez@fussionweb.com";
        let ToEmail3 = "eli_alvarez@fussionweb.com";
        let FromEmail = UsuarioEmail;
        let SubjectEmail = "Pedido de papelería para el departamento " + Dep;

        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("EmailListPrice", "Precios")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: '{"ToEmail":"' + ToEmail + '","ToEmail2":"' + ToEmail2 + '","ToEmail3":"' + ToEmail3 + '","FromEmail":"' + FromEmail + '","SubjectEmail":"' + SubjectEmail + '","BodyEmail":"' + BodyEmail + '"}',
            dataType: "json",
            success: function (data) {
            },
            error: function () {
                alert("Error en la api: EmailListPrice");
            }
        });
        for (var i = 0; i < 30; i++) {
            localStorage.removeItem("list-order-" + i);
        }
        var recoger_valor = $('#otraDiv').empty();
    }

    var table = $('#table-order-stationery').DataTable({
        "dom": 'Bfrtip',
        "buttons": ['copy', 'excel', 'pdf', 'print'],
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
        },
        "order": false,
        "pageLength": 10
    });
    var tablex = $('#table-order-stationery-by-email').DataTable({
        "dom": 'Bfrtip',
        "buttons": ['copy', 'excel', 'pdf', 'print'],
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
        },
        "order": false,
        "pageLength": 3
    });
    function clearTableGetOrdersByEmail() {
        var table = $('#table-order-stationery-by-email').DataTable();
        table.clear().draw();
    }
    function clearTableGetOrdersUser() {
        var table = $('#table-order-stationery').DataTable();
        table.clear().draw();
    }

    function ejecutaApiSap() {
        let tipo = $("#cmbTipoSearch option:selected").text();
        $('#loading-sap').show();
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("comprobarPedidos", "Papeleria")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: '{"Tipo":"' + tipo + '"}',
            dataType: "json",
            success: function (dataPedidos) {
                if (dataPedidos.Context == null || dataPedidos.Context=="") {
                    $.post('@Url.Action("PedidosDelUsuarioParaSap", "Papeleria")', {
                        Tipo: tipo
                    }, function (data) {
                        if (data.Context != null) {
                            swal({
                                title: "Pedidos sincronizados",
                                text: "Los pedidos se han sincronizado a SAP correctamente",
                                icon: "success",
                                button: true,
                            }).then((fin) => {
                                clearTableGetOrdersUser();
                                getOrdersUser(tipo);
                            });
                        }
                        else {
                            swal({
                                title: "Error",
                                text: "Los pedidos NO se han sincronizado a SAP correctamente, favor de reportarlo al area de sistemas.",
                                icon: "error",
                                button: true,
                            })
                        }
                    });
                } else {
                    swal({
                        title: "Error",
                        text: "¡Tiene que aprobar o rechazar todos los productos del pedido antes de procesar!\nLos folios SIE que tienen este error son: " + dataPedidos.Context,
                        icon: "error",
                        button: true,
                        dangerMode: true,
                    })
                }
            },
            error: function () {
                alert("Error en la api: comprobarPedidos");
            }
        });
        $('#loading-sap').hide();
    }
</script>
