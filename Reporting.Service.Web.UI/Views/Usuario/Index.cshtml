@{
    ViewBag.Title = "Usuarios";
}

@section CustomStyles {
    <!-- Estilos específicos para esta vista, incluyendo Bootstrap v5 -->
    <script type="text/javascript" language="javascript" src="~/Scripts/new/jquery-3.6.0.js"></script>
    <link href="~/Scripts/new/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/startbootstrap-sb-admin/css/styles.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Scripts/new/css/dataTables.bootstrap5.min.css" />
    <script src="~/Scripts/new/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/new/dataTables.bootstrap5.min.js"></script>
    <link href="~/Scripts/new/css/buttons.bootstrap5.min.css" rel="stylesheet" />
    <link href="~/Scripts/new/css/buttons.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/new/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/new/buttons.bootstrap5.min.js"></script>
    <script src="~/Scripts/new/jszip.min.js"></script>
    <script src="~/Scripts/new/pdfmake.min.js"></script>
    <script src="~/Scripts/new/vfs_fonts.js"></script>
    <script src="~/Scripts/new/buttons.html5.min.js"></script>
    <link href="~/Scripts/new/css/daterangepicker.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/StylesStepper/stepper.css" />

    <script src="~/Scripts/new/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="~/Content/startbootstrap-sb-admin/js/scripts.js"></script>
    <script src="~/Scripts/new/all.js" crossorigin="anonymous"></script>
    <script src="~/Scripts/new/sweetalert2@11.js"></script>
    <script src="~/Scripts/new/moment.min.js"></script>
    <script src="~/Scripts/new/daterangepicker.min.js"></script>
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Flux - Asg</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Users</li>
    </ol>
    <div class="row">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                Users

                <button type="submit" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#userModal">
                    New User
                </button>
            </div>
            <div class="card-body">
                <table id="Usuarios" class="display table table-striped" style="width:100%">
                    <thead>
                        <tr>
                            <td>Email Address</td>
                            <td>Role</td>
                            <td>Date Created</td>
                            <td>Company</td>
                            <td>Status</td>
                            <td>Editar</td>
                        </tr>
                    </thead>
                    <tbody id="body-usuarios">
                    </tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

</div>

<!-- Modal Usuario -->
<div class="modal modal-xl" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">User Registration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="">
                        <div class="alert alert-danger" role="alert" id="alert-required" style="display:none"></div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <input type="hidden" name="id" id="id" />
                                <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                                <input class="form-control" id="email" type="text" placeholder="Email Adresss" autocomplete="off" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="fa fa-industry"></i></span>
                            <div class="form-floating">
                                <select class="form-select rounded-start-0" id="cbx-company" name="empresas">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                            <div class="form-floating">
                                <select class="form-select rounded-start-0" id="cbx-roles" name="roles">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                                <input class="form-control" id="password" type="password" placeholder="Password" autocomplete="off" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                                <input class="form-control" id="confirmPassword" type="password" placeholder="Confirm Password" autocomplete="off" />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" onclick="insertUser(this);" class="btn btn-primary" id="btn-user-save">Save</button>
            </div>
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->
<!-- Modal Edición de Usuario -->
<div class="modal modal-xl" id="userModalEdit" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">User Edit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                                <input type="hidden" name="id" id="id" />
                                <input class="form-control" id="emailEdit" type="text" placeholder="Email Adresss" autocomplete="off" disabled />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">

                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                <input type="hidden" name="id" id="idUser" />
                                <input class="form-control" id="nameUser" type="text" placeholder="Name" autocomplete="off" />
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="input-group mb-3">

                            <div class="input-group">
                                <input type="text" class="form-control text-uppercase" id="lastName" placeholder="Last Name" autocomplete="off">
                                <span class="input-group-btn" style="width:0px;"></span>
                                <input type="text" class="form-control text-uppercase" id="motherLastName" placeholder="Mother's Last Name" autocomplete="off">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                            <div class="form-floating">
                                <select class="form-select rounded-start-0" id="cbx-roles-edit" name="roles">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                            <div class="form-floating">
                                <select class="form-select rounded-start-0" id="cbx-status" name="status">
                                    <option value="1">ACTIVE</option>
                                    <option value="0">INACTIVE</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="checkUpdatePassword">
                            <label class="form-check-label" for="checkUpdatePassword">
                                Update Password
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                                <input class="form-control" id="passwordEdit" type="password" placeholder="Password" autocomplete="off" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                                <input class="form-control" id="confirmPasswordEdit" type="password" placeholder="Confirm Password" autocomplete="off" disabled />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" onclick="updateUser(this);" class="btn btn-primary" id="btn-user-save">Save</button>
            </div>
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->


<script type="text/javascript">

    let rolesGlobal = "";
    $(document).ready(function ($) {
        load();
        $('#userModal').on('hidden.bs.modal', function (e) {
            cleanFields();
        });

        $("#checkUpdatePassword").change(function (e) {
            if (e.target.checked) {
                //passwordEdit, confirmPasswordEdit
                $("#passwordEdit").removeAttr('disabled');
                $("#confirmPasswordEdit").removeAttr('disabled');
            } else {
                $("#passwordEdit").attr('disabled','disabled');
                $("#confirmPasswordEdit").attr('disabled','disabled');
            }
        });

    });

    function GetUsers() {
        $.post('@Url.Action("GetAllUsers", "Usuario")', function (data) {
            if (data.Context != null && $.isArray(data.Context)) {
                var table = $('#Usuarios').DataTable();
                table.destroy();
                $("#body-usuarios").html('');

                $.each(data.Context, function (index, value) {
                    $("#body-usuarios").append('<tr>\
                                    <td> '+ value.Email + ' \
                                    <td> '+ value.Rol + ' </td>\
                                    <td> '+ value.FechaCreacion + ' </td>\
                                    <td> '+ value.Empresa + ' </td>\
                                    <td> '+ value.Estado + ' </td>\
                                    <td class="text-center"><i class="fa-solid fa-pencil" onclick=Edit("'+ value.Identifier + '");  data-bs-toggle="modal" data-bs-target="#userModalEdit"></i>\
                                </tr >');
                });

                $('#Usuarios').DataTable({
                    "dom": "Bfrtip",
                    "buttons": [
                        "excel", "pdf"
                     ],
                     "pageLength": 10,
                     "searching": true,
                     "ordering": true,
                     "autoWidth": true,
                    "language": {
                         "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
                      }
                });

            }
            else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: "No records found"
                })
            }
          });
    }

    function load() {
        GetUsers();
        $.ajax({
            type: 'GET',
            url:  '@Url.Action("ObtenerEmpresas", "Usuario")',
            success: function (data) {
                if (data != null) {
                    $("#cbx-company").html('');
                    $("#cbx-company").append('<option value="0">Company</option>');
                    $.each(data.Context, function (index, value) {
                        $("#cbx-company").append('<option value="' + value.Identifier + '">' + value.Nombre + '</option>');
                    });
                }
            }
        });

        $.ajax({
            type: 'GET',
            url:  '@Url.Action("ObtenerRoles", "Usuario")',
            success: function (data) {
                if (data != null) {
                    rolesGlobal = data.Context;
                    $("#cbx-roles").html('');
                    $("#cbx-roles").append('<option value="0">Choose a Role</option>');
                    $.each(data.Context, function (index, value) {
                        $("#cbx-roles").append('<option value="' + value.Identifier + '">' + value.Nombre + '</option>');
                    });
                }
            }
        });
    }

    function Edit(id) {
        IsUpdate = true;
        User = id;
        $.ajax({
                url:'@Url.Action("GetUser", "Usuario")',
                type: "get",
                data: {
                    id: id,
                },
                success: function (response) {
                    if (response.Context != null) {
                        $('#idUser').val(response.Context.Identifier);
                        $('#emailEdit').val(response.Context.Email);
                        $('#nameUser').val(response.Context.UserName);
                        $('#lastName').val(response.Context.ApellidoPaterno);
                        $('#motherLastName').val(response.Context.ApellidoMaterno);

                        //Llenando combo de roles
                        if (rolesGlobal != "") {
                            $.each(rolesGlobal, function (index, value) {
                                $("#cbx-roles-edit").append('<option value="' + value.Identifier + '">' + value.Nombre + '</option>');
                            });
                        }

                        $('#cbx-roles-edit').val(response.Context.IdRol);
                        let status = (response.Context.Estado == "Active") ? "1" : "0";
                        $('#cbx-status').val(status);

                    }
                },
                error: function (xhr) {
                    ////console.log(JSON.stringify(xhr));
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error has occurred when trying to get user, please report it to the systems department.'
                    });
                }
        });
    }

    function updateUser(e) {
        //Obtiene estado para mostrar advertencia en caso de Inativar un usuario
        let status = $('#cbx-status').val();
        if (status == '0') {

            Swal.fire({
                title: 'Warning',
                text: "Are you sure to deactivate the user?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm',
                customClass: {
                    actions: 'my-actions',
                    confirmButton: 'order-3',
                    cancelButton: 'order-2',
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    /*
                    Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )
                    */
                    update();
                }
            })

        } else {
            update();
        }
    }

    function update() {
        let id = $('#idUser').val();
        let nombre = $('#nameUser').val().trim();
        let paterno = $('#lastName').val();
        let materno = $('#motherLastName').val();
        let status = $('#cbx-status').val();
        let idRol = $('#cbx-roles-edit').val();
        let rol = $("#cbx-roles-edit option:selected").text();

        var jsonBody = {
            Identifier: id,
            UserName: nombre,
            ApellidoPaterno: paterno,
            ApellidoMaterno: materno,
            Estado: status,
            IdRol: idRol,
            Rol: rol
        }

        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("Update", "Usuario")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: JSON.stringify(jsonBody),
            dataType: "json",
            success: function (data) {
                if (data.Code == 200) {
                    Swal.fire('The user has successfully updated');
                    CierraPopup();
                    load();
                }
                else {
                    console.log(JSON.stringify(response));
                }
            },
            error: function (err) {
                alert("Service error User: Update User");
            }
        });
    }

    function insertUser() {
        //let id = $('#id').val();
        let email = $('#email').val();
        let password = $('#password').val();
        let confirmPassword = $('#confirmPassword').val();
        let empresa = $('#cbx-company').val();
        let rol = $('#cbx-roles').val();
        let rolName = $("#cbx-roles option:selected").text();

        let objDataUser = {
            "Email Adress": email,
            "Company": empresa,
            "Role": rol,
            "Password": password,
            "Confirm password": confirmPassword
        };

        let stringRequired = validateDataUser(objDataUser);

        if (stringRequired != "") {
            let stringMsgError = "<b>The following fields are required</b>:<br>";
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                html: stringMsgError + stringRequired
            })
            return;
        }

        if (!validateEmail(email)) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                html: "Email address is invalid, please verify"
            })
            return;
        }

        if (password !== confirmPassword) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                html: "The passwords do not match, please verify"
            })
            return;
        }


        const regex = new RegExp(/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^a-zA-Z\d]).{6,}$/);
        if (!regex.test(password)) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                html: "The password does not meet the following criteria<ul><li>6 digits</li><li>At least one upper case</li><li>At least one lower case</li><li>At least one special character</li><li>At least one number</li></ul>"
            })
            return;
        }

        $.ajax({
            url: '@Url.Action("Register", "Usuario")' + '?roleName=' + rolName,
            type: "POST",
            data: {
                Email: email,
                UserName: email,
                Password: password,
                Empresa: empresa,
                Rol: rol
            },
            success: function (response) {
                if (response.Code == 200) {
                    if (!response.Context.Succeeded) {
                        Swal.fire('The Email address already exists');
                    } else {
                        Swal.fire('The User has successfully registered');
                        CierraPopup();
                        load();
                    }
                }
                else {
                    console.log(JSON.stringify(response));
                }
            },
            error: function (xhr) {
                console.log(JSON.stringify(xhr));
            }
        });

    }

    function validateEmail(email) {
        return /^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email);
    }

    function validateDataUser( dataUser ) {
        let stringRequiredFields = "";
        for (const key in dataUser) {

            if (dataUser[key] == "" || dataUser[key] == '0') {
                stringRequiredFields += key + "<br>";
            }
        }
        return stringRequiredFields;
    }

    function CierraPopup() {
        $('.btn-close').trigger('click');
        cleanFields();
    }

    function cleanFields() {
        $('#email').val("");
        $('#cbx-company').val("");
        $('#cbx-roles').val("0");
        $('#cbx-roles').val("0");
        $('#password').val("");
        $('#confirmPassword').val("");
        $('#btn-user-save').html("Save");
    }

</script>