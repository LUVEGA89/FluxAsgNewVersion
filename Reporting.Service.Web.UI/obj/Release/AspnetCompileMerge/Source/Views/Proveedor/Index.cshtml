@{
    ViewBag.Title = "Pago a proveedores";
}

<section class="content-header">
    <h1>
        Pago a proveedores
        <small>Panel de control</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Finanzas</a></li>
        <li class="active">Pago a proveedores</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">Pago a proveedores</h3>
                    <div class="box-tools">
                        <div class="form-inline">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon">Tipo:</span>
                                    <select name="cbxTipo" id="cbxTipo" class="form-control">
                                        <option value="1">Facturas</option>
                                        <option value="2">Anticipos</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon">Empresa:</span>
                                    <select name="cbxEmpresa" id="cbxEmpresa" class="form-control">
                                        @foreach (var td in this.Model.Empresas)
                                        {
                                            <option value="@td.Nombre">@td.Nombre </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div id="btnPagos" class="btn btn-success btn-block"><i class="fa fa-binoculars"></i></div>
                            </div>
                            <div class="form-group">
                                <button type="button" id="btnLiberarPagos" class="btn btn-block bg-blue" style="padding:5px; color:white;"> Liberar pagos <i class="glyphicon glyphicon-send"></i></button>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon">Folio:</span>
                                    <input type="number" id="NumeroFolio" />

                                </div>
                            </div>
                            <div class="form-group">
                                <button type="button" id="btnReenviarCorreo" class="btn btn-block bg-blue-active" style="padding:5px; color:white;"> Reenviar correo <i class="glyphicon glyphicon-send"></i></button>
                            </div>
                        </div>

                        

                    </div>
                </div>
                <div class="box-body">
                    <div class="table table-responsive">
                        <div class="form-group" style="margin-left: 40%;">
                            <div class="input-group">
                                <span id="GranTotal" style="font-size: 20px;color: #00a65a;"></span>
                            </div>
                        </div>
                        <table class="table table-bordered" id="Pagos">
                            <thead>
                                <tr>
                                    <td>Folio SAP</td>
                                    <td>Referencia</td>
                                    <td>Nombre</td>
                                    <td>Banco</td>
                                    <td>Cuenta</td>
                                    <td>Clabe</td>
                                    <td>Método de pago</td>
                                    <td>Uuid</td>
                                    <td>Sucursal</td>
                                    <td>Descripción</td>
                                    <td>Linea de captura</td>
                                    <td>Contenedor</td>
                                    <td>Fecha</td>
                                    <td>Fecha de pago</td>
                                    <td>Total</td>
                                    <td>Monto pagado</td>
                                    <td>Total a pagar</td>
                                    <td>Moneda</td>
                                    <td style="width: 140px !important;"><button type="button" id="cbxTodos" class="btn btn-xs pull-right btn-spacing bg-red-active" data-toggle="modal" style="padding:5px; color:white; border-radius:5px;"> Deseleccionar todos <i class="glyphicon glyphicon-remove" style="width:20px"></i></button></td>
                                    <td>Fecha propuesta para pagar</td>
                                    <td>Pdf</td>
                                    <td>Rechazar</td>
                                </tr>
                            </thead>
                            <tbody id="DetallePagos"></tbody>
                        </table>
                    </div>

                </div>
                <div class="box-footer">

                </div>
                <div id="PagosRefresh" style="display:none;" class="overlay">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Anexos-->
    <div class="modal fade" id="modalAnexos" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="col-md-6">
                        <h5 class="modal-title">Detalle de los anexos</h5>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">x</span>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="box-header">
                        <i class="fa fa-level-down"></i>
                        <h3 class="box-title">Anexos</h3>
                    </div>
                    <div class="box-body" style="display: block;">
                        <div class="table-responsive table-responsive-custom">
                            <table class="table table-bordered" id="tablaAnex">
                                <thead>
                                    <tr class="table-primary">
                                        <th class="th-stationery">Archivo</th>
                                        <th class="th-stationery">Descargar</th>
                                    </tr>
                                </thead>
                                <tbody id="tbodyAnex"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="verAnexos" class="modal modal-danger fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="modal-title">
                                <i class="fa fa-file-text">Anexos</i>
                            </h5>
                        </div>
                        <div class="col-md-6">
                            <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true" style="color:white">x</span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="modal-body" style="background-color: white !important;">
                    <div id="carrousel-dinamic">
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    var ListSap = [];
    var CurrentDocNum;
    var GranTotal = 0;
   $('#modalAnexos').modal('hide');

    $("#cbxTodos").on("click", function () {
        $(".procesar").prop("checked", false);
        ListSap = [];
        GranTotal = 0;
        $("#GranTotal").text("Total a pagar: " + formatNumber.new(GranTotal, "$"));
    });

    $("#cbxEmpresa,#cbxTipo").change(function () {
        $("#btnPagos").click();
    });

    $("#btnReenviarCorreo").click(function () {
        if ($("#NumeroFolio").val() <= 0) {
            swal({
                title: "Error",
                text: "Indique por favor el número de folio.",
                icon: "error"
            });
            return;
        }

        $.confirm({
            title: 'Aviso',
            columnClass: 'col-md-12',
            content: '<p>¿Seguro que quieres reeviar el correo para la empresa: '+ $("#cbxEmpresa").val() +', del tipo: '+ $("#cbxTipo").val() +', con el folio: '+ $("#NumeroFolio").val() +'?</p>',
            buttons: {
                reenviar: {
                    text: 'Reenviar',
                    btnClass: 'btn-blue',
                    action: function () {
                        $.post('@Url.Action("ReenviarCorreo", "Proveedor")', {
                            Folio: $("#NumeroFolio").val(),
                            Empresa: $("#cbxEmpresa").val(),
                            Tipo: $("#cbxTipo").val()
                        }, function (data) {
                            //console.log(JSON.stringify(data));
                            if (data.Context != null) {

                                swal({
                                    title: "OK",
                                    text: "Se ha enviado el correo correctamente.",
                                    icon: "success"
                                });

                            } else {
                                if (data.Code == -2) {
                                    swal({
                                        title: "Advertencia",
                                        text: "No se encontró el folio para la empresa seleccionada",
                                        icon: "warning"
                                    });
                                } else {
                                    swal({
                                        title: "Error",
                                        text: data.Message,
                                        icon: "error"
                                    });
                                }
                            }
                        });
                    }
                },
                cancelar: function () {
                    $.alert('Proceso canceledo');
                }
            }
        });
    });

    $("#btnLiberarPagos").click(function () {

        if (ListSap.length <= 0) {
            swal({
                title: "Error",
                text: "No se han seleccionado pagos para liberar.",
                icon: "error"
            });
            return;
        }

        var Empresa = $("#cbxEmpresa").val();
        var Tipo = $("#cbxTipo").val();

        var Template = '';
        $.each(ListSap, function (index, value) {
            Template = Template + '<tr>\
                                            <td style="color:green">' + value.DocNum + '</td>\
                                            <td style="color:green">' + value.Referencia + '</td>\
                                            <td style="color:green">' + value.Uuid + '</td>\
                                            <td style="color:green">' + value.Proveedor + '</td>\
                                            <td style="color:green">' + value.Rfc + '</td>\
                                            <td style="color:green">' + value.FechaPago + '</td>\
                                            <td style="color:green">' + formatNumber.new(value.TotalPagar, "$") + '</td>\
                                        </tr >';
        });


        $.confirm({
            title: 'Resumen',
            columnClass: 'col-md-12',
            content: '<table class="table table-bordered" id="ResumenPagos">' +
                        '<thead>' +
                            '<tr>' +
                                '<td style="color:red">DocSAP</td>' +
                                '<td style="color:red">Referencia</td>' +
                                '<td style="color:red">Uuid</td>' +
                                '<td style="color:red">Proveedor</td>' +
                                '<td style="color:red">Rfc</td>' +
                                '<td style="color:red">Fecha de pago</td>' +
                                '<td style="color:red">Total a pagar</td>' +
                            '</tr>' +
                        '</thead>' +
                        '<tbody id="DetalleResumenPagos">' + Template + '</tbody>' +
                    '</table>',
            buttons: {
                liberar: {
                    text: 'Liberar',
                    btnClass: 'btn-blue',
                    action: function () {
                        $.post('@Url.Action("LiberarPagos", "Proveedor")', {
                            Pedidos: ListSap,
                            Empresa: Empresa,
                            Tipo: Tipo
                        }, function (data) {
                            //console.log(JSON.stringify(data));
                            if (data.Context != null) {

                                swal({
                                    title: "OK",
                                    text: "Se han enviado los pagos correctamente.",
                                    icon: "success"
                                });

                            } else {
                                if(data.Code == -2){
                                    swal({
                                        title: "Advertencia",
                                        text: data.Message,
                                        icon: "warning"
                                    });
                                }else{
                                    swal({
                                        title: "Error",
                                        text: data.Message,
                                        icon: "error"
                                    });
                                }
                            }
                            ListSap = [];
                            GranTotal = 0;
                            $("#GranTotal").text("");
                            $("#btnPagos").click();
                        });
                    }
                },
                cancelar: function () {
                    $.alert('Proceso canceledo');
                }
            }
        });
    });

    function AddListSap(DocNum, TotalPagar, Proveedor, Referencia, Banco, Cuenta, Clave, Uuid, Descripcion, Sucursal, MetodoPago, LineaCaptura, Moneda, Rfc) {

        var found = ListSap.find(element => element.DocNum == DocNum);
        //Si no existe se agrega
        if (found === undefined) {
            //Se busca el renglon y se pone la fecha que tiene
            let fecha = moment($("tr td input[id='" + DocNum + "']").val()).format('DD-MM-YYYY');

            var res = {
                DocNum: DocNum,
                FechaPago: fecha,
                TotalPagar: 1,
                Proveedor: Proveedor,
                Referencia: Referencia,
                Banco: Banco,
                Cuenta: Cuenta,
                Clave: Clave,
                Uuid: Uuid,
                Descripcion: Descripcion,
                Sucursal: Sucursal,
                MetodoPago: MetodoPago,
                LineaCaptura: LineaCaptura,
                Moneda: Moneda,
                Rfc: Rfc
            }
            ListSap.splice(0, 0, res);

            GranTotal = GranTotal + TotalPagar;

        } else { //Si existe se elimina del array
            ListSap = jQuery.grep(ListSap, function (value, i) {
                return (value.DocNum != DocNum);
            }, false);
            GranTotal = GranTotal - TotalPagar;
        }

        $("#GranTotal").text("Total a pagar: " + formatNumber.new(GranTotal.toFixed(2), "$"));
        //Salert(JSON.stringify(ListSap));
    }

    $("#btnPagos").click(function () {
        $("#PagosRefresh").show();

        ListSap = [];
        GranTotal = 0;
        $("#GranTotal").text("");

        var Empresa = $("#cbxEmpresa").val();
        var Tipo = $("#cbxTipo").val();

        $.post('@Url.Action("ObtenerPagos", "Proveedor")', {
            Empresa: Empresa,
            Tipo: Tipo,
            estatusPagos: 4
        }, function (data) {
            if (data.Context != null && $.isArray(data.Context)) {

                var table = $('#Pagos').DataTable();
                table.destroy();
                $("#DetallePagos").html('');

                var date = moment(new Date());
                var dow = date.day();

                switch(dow){
                    case 1: //Lunes 1
                        date.add(2, 'days');
                        break;
                    case 2: //Martes 2
                        date.add(1, 'days');
                        break;
                    case 3: //Miercoles 3
                        date.add(0, 'days');
                        break;
                    case 4: //Jueves 4
                        date.add(6, 'days');
                        break;
                    case 5: //Viernes 5
                        date.add(5, 'days');
                        break;
                    case 6: //Sabado 6
                        date.add(4, 'days');
                        break;
                    case 0: //Domingo 0
                        date.add(3, 'days');
                        break;
                }
                var pagopropuesto = date.format('MM/DD/YYYY');

                $.each(data.Context, function (index, value) {
                    $("#DetallePagos").append('<tr>\
                                                        <td>' + value.Identifier + '\
                                                        <td>'+ value.Referencia + '</td>\
                                                        <td>'+ value.CardName + '</td>\
                                                        <td>' + value.Banco + '</td>\
                                                        <td>' + value.Cuenta + '</td>\
                                                        <td>' + value.Clave + '</td>\
                                                        <td>' + value.MetodoPago + '</td>\
                                                        <td>' + value.Uuid + '</td>\
                                                        <td>' + value.Sucursal + '</td>\
                                                        <td>' + value.Descripcion.replace('"', '').replace('\'', '') + '</td>\
                                                        <td>' + value.LineaCaptura + '</td>\
                                                        <td>' + value.Contenedor.replace('"', '') + '</td>\
                                                        <td>'+ moment(value.DocDate).format('MM/DD/YYYY') + '</td>\
                                                        <td>'+ moment(value.FechaPago).format('MM/DD/YYYY') + '</td>\
                                                        <td>' + formatNumber.new(value.DocTotal, "$") + '</td >\
                                                        <td>'+ formatNumber.new(value.MontoPagado, "$") + '</td>\
                                                        <td>' + formatNumber.new(value.TotalPagar, "$") + '</td>\
                                                        <td>' + value.Moneda + '</td>\
                                                        <td><input value="' + value.Identifier + '" onclick="AddListSap(' + value.Identifier + ', ' + value.TotalPagar + ', \'' + value.CardName + '\', \'' + value.Referencia + '\', \'' + value.Banco + '\', \'' + value.Cuenta + '\', \'' + value.Clave + '\', \'' + value.Uuid + '\', \'' + value.Descripcion.replace('"', '') + '\', \'' + value.Sucursal + '\', \'' + value.MetodoPago + '\', \'' + value.LineaCaptura + '\', \'' + value.Moneda + '\', \'' + value.Rfc + '\')" type="checkbox" class="procesar" style="max-width:50px;"/></td>\
                                                        <td><input docnum="' + value.Identifier + '" id="' + value.Identifier + '" type="text" name="pagopropuesto" value="' + pagopropuesto + '" /></td>\
                                                        <td><a class="btn btn-lg" onclick="descargar(\'' + value.Archivo + '\')" align="center"><i class="fa fa-file-pdf-o" style="color: red;"></i></a><a class="btn btn-lg" data-toggle="modal" data-target="#modalAnexos" onclick="anexos(\'' + value.Identifier + '\', '+Tipo+')" align="center"><i class="fa fa-eye" style="color: green;"></i></a></td>\
                                                        <td><a class="btn btn-lg" onclick="rechazarPago(' + value.Identifier + ',' + value.TotalPagar + ')" align="center"><i class="fa fa-times" style="color: red;"></i></a></td>\
                                                    </tr >');
                });

                $('input[name="pagopropuesto"]').daterangepicker({
                    singleDatePicker: true,
                    minYear: 1901,
                    maxYear: parseInt(moment().format('YYYY'), 10)
                }, function(start, end, label) {

                });

                $('input[name="pagopropuesto"]').on('apply.daterangepicker', function (ev, selector) {
                    ListSap.map(function (dato) {
                        if (dato.DocNum == CurrentDocNum) {
                            dato.FechaPago = moment($("tr td input[id='" + CurrentDocNum + "']").val()).format('DD-MM-YYYY');
                        }

                        return dato;
                    });
                    //alert(JSON.stringify(ListSap));
                });

                $("#DetallePagos").on("click", "tr td input", function () {
                    CurrentDocNum = $(this).attr("id");
                });

                $('#Pagos').DataTable({
                    "dom": "Bfrtip",
                    "buttons": [
                        "excel", "pdf"
                    ],
                    "pageLength": 10000,
                    "searching": true,
                    "ordering": true,
                    "info": true,
                    "autoWidth": true,
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
                    }
                });
                $("#PagosRefresh").hide();
            } else {
            }
        });
    });

    function anexos(DocNum, Tipo) {
        var Empresa = $("#cbxEmpresa").val();
        $.post('@Url.Action("Anexos", "Proveedor")', {
            DocNum: DocNum,
            Empresa: Empresa,
            Tipo: Tipo
        }, function (data) {
            if (data != "" && data.Context != null) {
                $("#tbodyAnex").html('');


                //$("#carrousel-dinamic").html('');
                //var aux = 0;
                //var cabeceras = '';
                //var detalles = '';
                if (data.Context.length <= 0) {
                    $("#modalAnexos").modal('hide');
                    swal({
                        title: "Error",
                        text: "No se encontraron anexos.",
                        icon: "error"
                    });

                } else {
                    $.each(data.Context, function (index, value) {
                        var path = "";
                        if (value.SubPath != "") {
                            path = value.Path + "\\" + value.SubPath;
                        } else {
                            path = value.Path;
                        }
                        path = path.split("\\").join("\\\\\\\\");
                        $("#tbodyAnex").append(
                            '<tr>\
                                <td>' + value.FileName + '.' + value.FileExt + '</td>\
                                <td align="center"><a class="btn btn-lg" onclick="descargar(\'' + path + '\\\\\\\\' + value.FileName + '.' + value.FileExt + '\')" align="center"><i class="glyphicon glyphicon-download"></i> CLICK AQUÍ</a></td></tr>');

                        //let tipo = value.FileExt;

                        //if (aux == 0) {
                        //    cabeceras = cabeceras + '<li data-target="#carousel-generic1" data-slide-to="' + index + '" class="active"></li>';
                        //} else {
                        //    cabeceras = cabeceras + '<li data-target="#carousel-generic1" data-slide-to="' + index + '"></li>';
                        //}
                        //if (aux == 0) {
                        //    if (tipo == "JPG") {
                        //        detalles = detalles + '<div class="item active"><img onclick="image(this)" class="img-responsive center-block" style="width:auto;" src="data:image/png;base64,' + value.ImagenBase64 + '" /> <div class="carousel-caption"></div> </div > ';
                        //    }
                        //    else if (tipo == "PDF" || tipo == "pdf") {
                        //        let url = "";
                        //        detalles = detalles + '<div class="item active"><iframe align="center" style="width:100%; height:600px; max-height:100%; max-width: 100%;" src="data:application/pdf;base64,' + value.Base64 + '"  /> <div class="carousel-caption"></div> </div > ';
                        //    }
                        //    else if (tipo == "XML" || tipo == "xml") {
                        //        let url = "";
                        //        detalles = detalles + '<div class="item active"><iframe align="center" style="width:100%; height:600px; max-height:100%; max-width: 100%;" src="data:application/xml;base64,' + value.Base64 + '" /> <div class="carousel-caption"></div> </div > ';
                        //    }
                        //} else {
                        //    if (tipo == "JPG") {
                        //        detalles = detalles + '<div class="item"><img onclick="image(this)" class="img-responsive center-block" style="width:auto;" src="data:image/png;base64,' + value.Base64 + '" /><div class="carousel-caption"></div> </div>';
                        //    }
                        //    else if (tipo == "PDF" || tipo == "pdf") {
                        //        detalles = detalles + '<div class="item"><iframe align="center" style="width:100%; height:600px; max-height:100%; max-width: 100%;" src="data:application/pdf;base64,' + value.Base64 + '" /> <div class="carousel-caption"></div> </div > ';
                        //    }
                        //    else if (tipo == "XML" || tipo == "xml") {
                        //        let url = "";
                        //        detalles = detalles + '<div class="item"><iframe align="center" style="width:100%; height:600px; max-height:100%; max-width: 100%;" src="data:application/xml;base64,' + value.Base64 + '"  /> <div class="carousel-caption"></div> </div > ';
                        //    }
                        //}
                        //aux++;
                    });

                    //se dibuja el carrusel
                    //$("#carrousel-dinamic").append(
                    //    "<div>" +
                    //        "<div id='carousel-generic1' class='carousel slide' data-ride='carousel' style='width:100%;margin-left:0%;'>" +
                    //        "<ol id='contenedor-carousel-cabecera' class='carousel-indicators'>" +
                    //        cabeceras +
                    //    "<\/ol>" +
                    //    "<div id='carousel-detalles' class='carousel-inner' role='listbox'>" +
                    //    detalles +
                    //    "<\/div>" +
                    //        "<a class='left carousel-control' href='#carousel-generic1' role='button' data-slide='prev'>" +
                    //            "<span class='glyphicon glyphicon-chevron-left' aria-hidden='true'><\/span>" +
                    //            "<span class='sr-only'>Anterior<\/span>" +
                    //        "<\/a>" +
                    //        "<a class='right carousel-control' href='#carousel-generic1' role='button' data-slide='next'>" +
                    //            "<span class='glyphicon glyphicon-chevron-right' aria-hidden='true'><\/span>" +
                    //            "<span class='sr-only'>Siguiente<\/span>" +
                    //        "<\/a>" +
                    //    "<\/div>" +
                    //    "<\/div>");
                }
            } else {
                swal({
                    title: "Error",
                    text: "No se encontraron anexos.",
                    icon: "error"
                });
            }
        });

    }

    function rechazarPago(Identifier, TotalPagar) {
        //Validar que no este seleccionado el pago,
        //Si esta seleccionado tendriamos que deseleccionarlo
        //y quitarlo de la lista
        var found = ListSap.find(element => element.DocNum == Identifier);

        if (found === undefined) {

        }
        else {
            $("tr td input[value='" + Identifier + "']").click();
        }

        $.post('@Url.Action("RechazarPago", "Proveedor")', {
            Identifier: Identifier,
            estatusPagos: 1
        }, function (data) {

            $("#GranTotal").text("Total a pagar: " + formatNumber.new(GranTotal.toFixed(2), "$"));

            $("#btnPagos").click();

            swal({
                title: "OK",
                text: "Se ha rechazado el pago correctamente.",
                icon: "success"
            });
        });
    }

    function descargar(Archivo) {
        if (Archivo == "Sin archivo") {
            swal({
                title: "Error",
                text: "No se encontró el archivo.",
                icon: "error"
            });
        } else {

            $.post('@Url.Action("Descargar", "Proveedor")', {
                Archivo: Archivo
            }, function (data) {
                if (data != "") {
                    window.location.href = '@Url.Action("Descargar", "Proveedor")' + '?Archivo=' + Archivo;;
                } else {
                    swal({
                        title: "Error",
                        text: "No se encontró el archivo.",
                        icon: "error"
                    });
                }
            });

            @*var resp = '@Url.Action("Descargar", "Proveedor")' + '?Archivo=' + Archivo;
            if(resp == null){
                swal({
                    title: "Error",
                    text: "No se encontró el archivo.",
                    icon: "error"
                });
            }else{
                window.location.href = resp;
            }*@
        }
    }

    var formatNumber = {
        separador: ",", // separador para los miles
        sepDecimal: '.', // separador para los decimales
        formatear: function (num) {
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
            }
            return this.simbol + splitLeft + splitRight;
        },
        new: function (num, simbol) {
            this.simbol = simbol || '';
            return this.formatear(num);
        }
    }

</script>