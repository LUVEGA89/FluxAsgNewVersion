@{
    /**/

    ViewBag.Title = "Configuración";
}

<section class="content-header">
    <h1>
        <small>Panel de control</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Requerimiento</a></li>
        <li class="active">Configuración</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-danger box-solid">
                <div class="box-header">
                    <h3 class="box-title">Alta de tipo de Requirimiento</h3>
                </div>
                <div class="box-body">
                    <form class="form-horizontal">
                        <div class="box-body">
                            <div class="form-group">
                                <label for="areas">Area dirigido * </label>
                                <select id="selected-area" class="form-control"></select>
                            </div>
                            <div class="form-group">
                                <label for="txtTipoReq" class="col-sm-2 control-label">Tipo de Req.</label>
                                <div class="col-sm-10">
                                    <input id="txtTipoRequerimientoIdentifier" type="hidden" />
                                    <input id="txtTipoRequerimiento" type="text" class="form-control text-uppercase" placeholder="Tipo de requerimiento">
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <button id="btnTipReqGuardar" type="button" class="btn btn-success pull-right">Guardar</button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
        <div class="col-md-6">
            <div class="box box-danger box-solid">
                <div class="box-header">
                    <h3 class="box-title">Alta de Conceptos</h3>
                </div>
                <div class="box-body">
                    <form class="form-horizontal">
                        <div class="box-body">
                            <div class="form-group">
                                <label for="areas">Area dirigido * </label>
                                <select id="selected-area-secundario" class="form-control"></select>
                            </div>
                            <div class="form-group">
                                <label for="areas">Tipo de Requerimiento * </label>
                                <select id="selected-requerimiento" class="form-control"></select>
                            </div>
                            <div class="form-group">
                                <label for="txtConcepto" class="col-sm-2 control-label">Concepto</label>
                                <div class="col-sm-10">
                                    <input id="txtConceptoIdentifier" type="hidden" />
                                    <input id="txtConcepto" type="text" class="form-control text-uppercase" placeholder="Concepto">
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <button id="btnConceptoGuardar" type="button" class="btn btn-success pull-right">Guardar</button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="box box-danger box-solid">
                <div class="box-header">
                    <h3 class="box-title">Historico de requerimientos</h3>
                </div>
                <div class="box-body">
                    <div class="table table-responsive">
                        <table class="table table-bordered" id="table-requerimientos">
                            <thead>
                                <tr>
                                    <td>Area</td>
                                    <td>Requerimiento</td>
                                    <td style="max-width:50px !important;">Editar</td>
                                    <td style="max-width:50px !important;">Eliminar</td>
                                </tr>
                            </thead>
                            <tbody id="body-requerimientos"></tbody>
                        </table>
                    </div>
                </div>

                <div class="overlay hide">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="box box-danger box-solid">
                <div class="box-header">
                    <h3 class="box-title">Historico de conceptos</h3>
                </div>
                <div class="box-body">
                    <div class="table table-responsive">
                        <table class="table table-bordered" id="table-conceptos">
                            <thead>
                                <tr>
                                    <td>Tip Requerimiento</td>
                                    <td>Concepto</td>
                                    <td style="max-width:50px !important;">Editar</td>
                                    <td style="max-width:50px !important;">Eliminar</td>
                                </tr>
                            </thead>
                            <tbody id="body-conceptos"></tbody>
                        </table>
                    </div>
                </div>

                <div class="overlay hide">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
    </div>
</section>



<script>

    intitModule();

    function intitModule() {
        LimpiarValoresReq();
        LimpiarValoresConceptos();

        getRequerimientos();
        getConceptos();
        getAreas();        
    }

    function LimpiarValoresReq() {
        $('#selected-area').val('');
        $("#txtTipoRequerimientoIdentifier").val('');
        $("#txtTipoRequerimiento").val('');
    }

    function LimpiarValoresConceptos() {
        $('#selected-area-secundario').val('');
        $('#selected-requerimiento').val('');
        $("#txtConceptoIdentifier").val('');
        $("#txtConcepto").val('');
    }
    function getAreas() {
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetAreas", "Buzon")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: null,
            dataType: "json",
            success: function (data) {
                if (data.Context != null) {
                    $("#selected-area").empty();
                    $("#selected-area-secundario").empty();

                    let selected = $('#selected-area');
                    let selectedsecundario = $('#selected-area-secundario');
                    selected.append("<option value='0' selected='selected'>Seleccionar area</option>");
                    selected.append("<option value='1' >GENERAL</option>");
                    $.each(data.Context, function (index, value) {
                        selected.append(
                            "<option value=" + value.Identifier + ">" + value.Nombre + "</option>");
                    });

                    if (data.Context.length > 0) {
                        selected.append("<option value='22' >OTRA AREA</option>");
                    }

                    selectedsecundario.append("<option value='0' selected='selected'>Seleccionar area</option>");
                    selectedsecundario.append("<option value='1' >GENERAL</option>");
                    $.each(data.Context, function (index, value) {
                        selectedsecundario.append(
                            "<option value=" + value.Identifier + ">" + value.Nombre + "</option>");
                    });

                    if (data.Context.length > 0) {
                        selectedsecundario.append("<option value='22' >OTRA AREA</option>");
                    }


                }
            },
        });
    }

    $('#selected-area-secundario').on('change', function () {
        let value = this.value;
        if (value != 0 || value != '0') {
            getgetRequerimientoByArea(value);
        }
    });

    function getgetRequerimientoByArea(idArea) {
        $.post('@Url.Action("GetRequerimientosByArea", "Requerimiento")',
        {
            idArea: idArea
        }, function (data) {
            if (data.Context != null) {
                $("#selected-requerimiento").empty();
                let selected = $('#selected-requerimiento');
                selected.append("<option value='0' selected='selected'>Seleccionar requerimiento</option>");
                $.each(data.Context, function (index, value) {
                    selected.append(
                        "<option value=" + value.Identifier + ">" + value.Descripcion.toUpperCase() + "</option>");
                });
            }
        });
    }


    

    $('#btnTipReqGuardar').click(function (e) {
        e.preventDefault();

        let areaId = $('#selected-area').val();
        if (areaId == 0 || areaId == '0') {
            swal("Alerta !", "Se debe seleccionar la area", "warning");
            return;
        }

        let Identifier = $("#txtTipoRequerimientoIdentifier").val();

        let Descripcion = $("#txtTipoRequerimiento").val();
        if (Descripcion == '') {
            swal("Alerta !", "Se debe de agregar la descripción", "warning");
            return;
        }

        $.post('@Url.Action("AddRequerimiento", "Requerimiento")',
        {
            Identifier: Identifier,
            descripcion: Descripcion,
            idArea: areaId
        }, function (data) {
            if (data.Context != null) {
                if (data.Context) {
                    swal("Exitoso.", "Registrado.", "success");
                }
                else {
                    swal("Alerta!", "No Registrado", "warning");
                }
                LimpiarValoresReq();
                getRequerimientos();
            }
            if (data.Message != 'Success') {
                alert('Error generado ' + data.Message);
            }
        }).done(function (data) {
        }).fail(function (data) {
        }).always(function (data) {
        });
    });

    function getRequerimientos() {

        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetRequerimientos", "Requerimiento")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: null,
            dataType: "json",
            success: function (data) {
                if (data.Context != null) {
                    var table = $('#table-requerimientos').DataTable();
                    table.destroy();
                    $("#body-requerimientos").html('');
                    console.log(JSON.stringify(data.Context));
                    $.each(data.Context, function (index, value) {
                        $("#body-requerimientos").append('<tr>\
                            <td>' + value.Area.Nombre.toUpperCase() + '</td>\
                            <td>' + value.Descripcion.toUpperCase() + '</td>\
                            <td>\
                                <div onclick="Editar('+ value.Identifier + ')" class="btn btn-block btn-default"><i class="fa fa-pencil"></i></div>\
                            </td>\
                            <td>\
                                <div onclick="Eliminar(' + value.Identifier + ')" class="btn btn-block btn-default"><i class="fa fa-remove"></i></div>\
                            </td>\
                        </tr>');
                    });
                    $('#table-requerimientos').DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                        ],
                        "paging": true,
                        "lengthChange": true,
                        "searching": true,
                        "ordering": false,
                        "info": true,
                        "autoWidth": true,
                        "language": {
                            "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
                        }
                    });
                }
            },
        });
    }

    function Editar(Identifier) {
        console.log('Editar Identifier' + Identifier);

        $.post('@Url.Action("GetRequerimiento", "Requerimiento")',
        {
            Identifier: Identifier
        }, function (data) {
            if (data.Context != null) {
                if (data.Context != null) {
                    $('#selected-area').val(data.Context.Area.Identifier);
                    $("#txtTipoRequerimientoIdentifier").val(data.Context.Identifier);
                    $("#txtTipoRequerimiento").val(data.Context.Descripcion);
                }
            }
            if (data.Message != 'Success') {
                alert('Error generado ' + data.Message);
            }
        }).done(function (data) {
        }).fail(function (data) {
        }).always(function (data) {
        });
    }
    function Eliminar(Identifier) {
        console.log('Eliminar Identifier' + Identifier);

        swal({
            title: "¿Desea eliminar el requerimiento?",
            text: "Ya no estara disponible",
            icon: "warning",
            buttons: [
              'No, cancelar esta operación',
              'Si, estoy seguro'
            ],
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {

                $.post('@Url.Action("EliminarRequerimiento", "Requerimiento")',
                {
                    Identifier: Identifier
                }, function (data) {
                    if (data.Context != null) {
                        if (data.Context != null) {
                            if (data.Context) {
                                swal("Exitoso.", "Eliminado.", "success");
                            }
                            else {
                                swal("Alerta!", "No Eliminado", "warning");
                            }
                            LimpiarValoresReq();
                            getRequerimientos();
                        }
                    }
                    if (data.Message != 'Success') {
                        alert('Error generado ' + data.Message);
                    }
                }).done(function (data) {
                }).fail(function (data) {
                }).always(function (data) {
                });

            } else {
                swal("Cancelado", "Operación cancelada", "error");
            }
        });
    }



    $('#btnConceptoGuardar').click(function (e) {
        e.preventDefault();

        let Identifier = $("#txtConceptoIdentifier").val();

        let requerimientoId = $('#selected-requerimiento').val();
        if (requerimientoId == 0 || requerimientoId == '0') {
            swal("Alerta !", "Se debe seleccionar un requerimiento de la lista", "warning");
            return;
        }

        let Descripcion = $("#txtConcepto").val();
        if (Descripcion == '') {
            swal("Alerta !", "Se debe de agregar la descripción", "warning");
            return;
        }

        $.post('@Url.Action("AddConcepto", "Requerimiento")',
        {
            Identifier: Identifier,
            descripcion: Descripcion,
            requerimiento: requerimientoId
        }, function (data) {
            if (data.Context != null) {
                if (data.Context) {
                    swal("Exitoso.", "Registrado.", "success");
                }
                else {
                    swal("Alerta!", "No Registrado", "warning");
                }
                LimpiarValoresConceptos();
                getConceptos();
            }
            if (data.Message != 'Success') {
                alert('Error generado ' + data.Message);
            }
        }).done(function (data) {
        }).fail(function (data) {
        }).always(function (data) {
        });
    });

    function getConceptos() {

        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetConceptos", "Requerimiento")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: null,
            dataType: "json",
            success: function (data) {
                if (data.Context != null) {
                    var table = $('#table-conceptos').DataTable();
                    table.destroy();
                    $("#body-conceptos").html('');
                    console.log(JSON.stringify(data.Context));
                    $.each(data.Context, function (index, value) {
                        $("#body-conceptos").append('<tr>\
                            <td>' + value.TipoRequerimiento.Descripcion.toUpperCase() + '</td>\
                            <td>' + value.Descripcion.toUpperCase() + '</td>\
                            <td>\
                                <div onclick="EditarConcepto('+ value.Identifier + ')" class="btn btn-block btn-default"><i class="fa fa-pencil"></i></div>\
                            </td>\
                            <td>\
                                <div onclick="EliminarConcepto(' + value.Identifier + ')" class="btn btn-block btn-default"><i class="fa fa-remove"></i></div>\
                            </td>\
                        </tr>');
                    });
                    $('#table-conceptos').DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                        ],
                        "paging": true,
                        "lengthChange": true,
                        "searching": true,
                        "ordering": false,
                        "info": true,
                        "autoWidth": true,
                        "language": {
                            "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json"
                        }
                    });
                }
            },
        });
    }

    function EditarConcepto(Identifier) {
        console.log('Editar Identifier' + Identifier);

        $.post('@Url.Action("GetConcepto", "Requerimiento")',
        {
            Identifier: Identifier
        }, function (data) {
            if (data.Context != null) {
                if (data.Context != null) {
                    $("#selected-requerimiento").val(data.Context.TipoRequerimiento.Identifier);
                    $("#txtConceptoIdentifier").val(data.Context.Identifier);
                    $("#txtConcepto").val(data.Context.Descripcion);
                }
            }
            if (data.Message != 'Success') {
                alert('Error generado ' + data.Message);
            }
        }).done(function (data) {
        }).fail(function (data) {
        }).always(function (data) {
        });
    }
    function EliminarConcepto(Identifier) {
        console.log('Eliminar Identifier' + Identifier);

        swal({
            title: "¿Desea eliminar el requerimiento?",
            text: "Ya no estara disponible",
            icon: "warning",
            buttons: [
              'No, cancelar esta operación',
              'Si, estoy seguro'
            ],
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {

                $.post('@Url.Action("EliminarConcepto", "Requerimiento")',
                {
                    Identifier: Identifier
                }, function (data) {
                    if (data.Context != null) {
                        if (data.Context != null) {
                            if (data.Context) {
                                swal("Exitoso.", "Eliminado.", "success");
                            }
                            else {
                                swal("Alerta!", "No Eliminado", "warning");
                            }
                            LimpiarValoresConceptos();
                            getConceptos();
                        }
                    }
                    if (data.Message != 'Success') {
                        alert('Error generado ' + data.Message);
                    }
                }).done(function (data) {
                }).fail(function (data) {
                }).always(function (data) {
                });

            } else {
                swal("Cancelado", "Operación cancelada", "error");
            }
        });
    }
</script>


