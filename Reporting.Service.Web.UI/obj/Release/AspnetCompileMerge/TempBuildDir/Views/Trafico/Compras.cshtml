@model Reporting.Service.Web.UI.Models.TraficoComprasView

<script src="~/Content/template/bootstrap/js/bootstrap-checkbox.min.js"></script>
<script src="~/Content/template/Js/Common.js"></script>
<script src="~/Content/template/Js/plupload/plupload.full.min.js"></script>
<script src="~/Content/template/Js/jquery.msg.min.js"></script>
<style>
	.wizard {
		margin: 20px auto;
		background: #fff;
	}

		.wizard .nav-tabs {
			position: relative;
			margin: 40px auto;
			margin-bottom: 0;
			border-bottom-color: #e0e0e0;
		}

		.wizard > div.wizard-inner {
			position: relative;
		}

	.connecting-line {
		height: 2px;
		background: #e0e0e0;
		position: absolute;
		width: 80%;
		margin: 0 auto;
		left: 0;
		right: 0;
		top: 50%;
		z-index: 1;
	}

	.wizard .nav-tabs > li.active > a, .wizard .nav-tabs > li.active > a:hover, .wizard .nav-tabs > li.active > a:focus {
		color: #555555;
		cursor: default;
		border: 0;
		border-bottom-color: transparent;
	}

	span.round-tab {
		width: 70px;
		height: 70px;
		line-height: 70px;
		display: inline-block;
		border-radius: 100px;
		background: #fff;
		border: 2px solid #e0e0e0;
		z-index: 2;
		position: absolute;
		left: 0;
		text-align: center;
		font-size: 25px;
	}

		span.round-tab i {
			color: #555555;
		}

	.wizard li.active span.round-tab {
		background: #fff;
		border: 2px solid ##CF2127;
	}

		.wizard li.active span.round-tab i {
			color: #CF2127;
		}

	span.round-tab:hover {
		color: #333;
		border: 2px solid #333;
	}

	.wizard .nav-tabs > li {
		width: 25%;
	}

	.wizard li:after {
		content: " ";
		position: absolute;
		left: 46%;
		opacity: 0;
		margin: 0 auto;
		bottom: 0px;
		border: 5px solid transparent;
		border-bottom-color: #CF2127;
		transition: 0.1s ease-in-out;
	}

	.wizard li.active:after {
		content: " ";
		position: absolute;
		left: 46%;
		opacity: 1;
		margin: 0 auto;
		bottom: 0px;
		border: 10px solid transparent;
		border-bottom-color: #CF2127;
	}

	.wizard .nav-tabs > li a {
		width: 70px;
		height: 70px;
		margin: 20px auto;
		border-radius: 100%;
		padding: 0;
	}

		.wizard .nav-tabs > li a:hover {
			background: transparent;
		}

	.wizard .tab-pane {
		position: relative;
		padding-top: 50px;
	}

	.wizard h3 {
		margin-top: 0;
	}

	.row {
		margin-right: -10px;
		margin-left: -10px;
	}

	.form-group input[type="checkbox"] {
    display: none;
}

.form-group input[type="checkbox"] + .btn-group > label span {
    width: 20px;
}

.form-group input[type="checkbox"] + .btn-group > label span:first-child {
    display: none;
}
.form-group input[type="checkbox"] + .btn-group > label span:last-child {
    display: inline-block;   
}

.form-group input[type="checkbox"]:checked + .btn-group > label span:first-child {
    display: inline-block;
}
.form-group input[type="checkbox"]:checked + .btn-group > label span:last-child {
    display: none;   
}

</style>

<section class="content-header">
	<h1>
		Compras
		<small>Aprobación</small>
	</h1>
	<ol class="breadcrumb">
		<li><a href="#"><i class="fa fa-dashboard"></i>Tráfico</a></li>
		<li class="active">Compras</li>
	</ol>
</section>
<section class="content">
	<div id="divRegistroContenedor" class="col-md-12">

		<div class="box box-warning">
			<div class="box-header with-border">
				<i class="fa fa-pencil-square-o"></i>

				<h3 class="box-title" id="TituloPestana"></h3>

				<div class="box-tools pull-right">
					<button type="button" class="btn btn-box-tool" data-widget="collapse">
						<i class="fa fa-minus"></i>
					</button>
				</div>
			</div>
			<div class="box-body">
				<div class="row">
					<div class="clo-md-12">
						<div class="wizard">
							<div class="wizard-inner">
								<div class="connecting-line"></div>
								<ul class="nav nav-tabs" role="tablist">
									<li role="presentation" class="active">
										<a href="#step1" data-toggle="tab" aria-controls="step1" role="tab" title="Step 1">
											<span class="round-tab">
												<i class="glyphicon glyphicon-folder-open"></i>
											</span>
										</a>
									</li>
									<li role="presentation" class="disabled">
										<a href="#step2" data-toggle="tab" aria-controls="step2" role="tab" title="Step 2">
											<span class="round-tab">
												<i class="glyphicon glyphicon-pencil"></i>
											</span>
										</a>
									</li>
									<li role="presentation" class="disabled">
										<a href="#step3" data-toggle="tab" aria-controls="step3" role="tab" title="Step 3">
											<span class="round-tab">
												<i class="glyphicon glyphicon-picture"></i>
											</span>
										</a>
									</li>
									<li role="presentation" class="disabled">
										<a href="#complete" data-toggle="tab" aria-controls="complete" role="tab" title="Complete">
											<span class="round-tab">
												<i class="glyphicon glyphicon-ok"></i>
											</span>
										</a>
									</li>
								</ul>
							</div>
							<!--<form role="form">-->
							<div class="tab-content">
								<div class="tab-pane active" role="tabpanel" id="step1">
									<div class="row">
										<div class="col-md-6">
											<div class="row">
												<div class="col-md-12">
													<div class="table-responsive">
														<table id="TablePedidos" class="table table-bordered">
															<thead>
																<tr>
																	<th colspan="6" class="th-stationery">Asociar Pedidos</th>
																</tr>
																<tr>
																	<th class="thlpp-border-bottom" style="text-align:center">Pedido</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Contenedor</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Proveedor</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Fecha</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Moneda</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Total</th>
																</tr>
															</thead>
															<tbody id="DetalleTablePedidos"></tbody>
														</table>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12" style="padding-right: 25px;">
													<div class="form-group">
														<div class="form-group">
															<div class="input-group">
																<div class="input-group-addon">
																	<label>Asignar contenedor:</label>
																</div>
																<input id="Contenedor" type="text" onkeypress="ValidarContenedor()" class="form-control pull-right">
																<div style="cursor:pointer;" class="input-group-addon" id="btnAsociarContenedor">
																	<i class="fa fa-archive"></i>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12">
													<div class="form-group">
														<input type="checkbox" name="checkPendiente" id="checkPendiente" autocomplete="off" />
														<div class="[ btn-group ]">
															<label for="checkPendiente" class="[ btn btn-default active ]">
																Se validó precio de O.C. con el conocimiento de
															</label>
															<label for="checkPendiente" class="[ btn btn-success ]">
																<span class="[ glyphicon glyphicon-ok ]"></span>
																<span> </span>
															</label>
														</div>

														<!--<div class="form-group">
															<div class="input-group">
																<div class="input-group-addon">
																	<label>Se validó precio de O.C. con el conocimiento de               </label>
																</div>
																<input id="checkPendiente" type="checkbox">
															</div>
														</div>-->
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12">
													<div class="form-group">
														<div class="form-group">
															<div class="input-group">
																<span class="input-group-addon">Tipo documento:</span>
																<select name="cbxTipoDocumento" id="cbxTipoDocumento" class="form-control">
																	@foreach (var td in this.Model.TiposDeDocumento)
																	{
																		<option value="@td.Identifier">@td.Nombre | @td.Requerido </option>
}
																</select>
															</div>
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12" id="Conten">
													<div class="form-group">
														<div class="form-group">
															<div class="input-group">
																<input id="arcivo1" type="file">
															</div>
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12">
													<div class="table-responsive">
														<table id="TableTipoDocumentos" class="table table-bordered">
															<thead>
																<tr>
																	<th colspan="5" class="th-stationery">Documentos Cargados</th>
																</tr>
																<tr>
																	<th class="thlpp-border-bottom" style="text-align:center; display:none">Identificador</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Nombre</th>
																	<th class="thlpp-border-bottom" style="text-align:center; display:none">Tipo</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Tipo</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Comentarios</th>
																</tr>
															</thead>
															<tbody id="DetalleTableTipoDocumentos"></tbody>
														</table>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12">
													<ul class="list-inline pull-left">
														<li><button type="button" class="btn btn-primary GuardarPaso1">Guardar</button></li>
													</ul>
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="row">
												<div class="col-md-12">
													<div class="form-group">
														<div class="input-group">
															<input id="IdPedido" class="form-control input-sm pull-right searchable-stationery" onkeypress="return OnlyNumber(event)" placeholder="Buscar pedido SAP" type="text">
															<div class="input-group-btn">
																<button class="btn btn-sm btn-default" onclick="BuscarPedidos()"><i class="fa fa-search"></i></button>
															</div>
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-12">
													<div class="table-responsive">
														<table class="table table-bordered">
															<thead>
																<tr>
																	<th colspan="6" class="th-stationery">Seleccionar Pedidos</th>
																</tr>
																<tr>
																	<th class="thlpp-border-bottom" style="text-align:center">Pedido</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Contenedor</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Proveedor</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Fecha</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Moneda</th>
																	<th class="thlpp-border-bottom" style="text-align:center">Total</th>
																</tr>
															</thead>
															<tbody id="tabla-pedidos"></tbody>
														</table>
													</div>
												</div>
											</div>

										</div>
									</div>
								</div>
								<div class="tab-pane" role="tabpanel" id="step2">
									<h3>Titulo 2</h3>
									<p>Paso 2</p>
									<ul class="list-inline pull-right">
										<li><button type="button" class="btn btn-default prev-step">Previous</button></li>
										<li><button type="button" class="btn btn-primary next - step">Save and continue</button></li>
									</ul>
								</div>
								<div class="tab-pane" role="tabpanel" id="step3">
									<h3>Titulo 3</h3>
									<p>Paso 3</p>
									<ul class="list-inline pull-right">
										<li><button type="button" class="btn btn-default prev-step">Previous</button></li>
										<!--<li><button type="button" class="btn btn-default next-step">Skip</button></li>-->
										<li><button type="button" class="btn btn-primary btn-info-full next-step">Save and continue</button></li>
									</ul>
								</div>
								<div class="tab-pane" role="tabpanel" id="complete">
									<h3>Proceso Terminado</h3>
									<p>Se completaron todos los pasos satisfactoriamente.</p>
								</div>
								<div class="clearfix"></div>
							</div>
							<!--</form>-->
						</div>
					</div>
				</div>
			</div>
		</div>


	</div>
</section>
<script>

	function nextTab(elem) {
		$(elem).next().find('a[data-toggle="tab"]').click();
	}
	function prevTab(elem) {
		$(elem).prev().find('a[data-toggle="tab"]').click();
	}

	var pedidos = [], Documentos = [];
	var ContenedorValido = false;

	function AgregarPedido(Total, Contenedor, CodigoMoneda, Fecha, Identifier, Proveedor) {

		var res = {
			Identifier: Identifier,
			Fecha: Fecha,
			Proveedor: Proveedor,
			CodigoMoneda: CodigoMoneda,
			Contenedor: Contenedor,
			Total: Total
		}

		pedidos.splice(0, 0, res);
	}

	function AgregarDocumento(id, Nombre, Tipo, Comentarios, NombreTipo) {
		var res1 = {
			Identifier: id,
			Nombre: Nombre,
			Tipo: Tipo,
			Comentarios: Comentarios,
			NombreTipo: NombreTipo
		}

		Documentos.splice(0, 0, res1);
	}

	$(document).ready(function () {

		var uploader1 = new plupload.Uploader({
			runtimes: 'html5,flash,silverlight,html4',
			url: '@Url.Action("Load", "Trafico")',
			chunk_size: '1mb',
			unique_names: true,

			// Resize images on client-side if we can
			resize: { width: 320, height: 240, quality: 90 },

			filters: {
				max_file_size: '50mb',

				// Specify what files to browse for
				mime_types: [
					{ title: "Archivos PDF", extensions: "pdf" },
				]
			},
			// Flash settings
			flash_swf_url: '@Url.Content("~/Js/plupload")/plupload.flash.swf',

			// Silverlight settings
			silverlight_xap_url: '@Url.Content("~/Js/plupload")/plupload.silverlight.xap',

			// PreInit events, bound before any internal events
			preinit: {
				Init: function (up, info) {
					log('[Init]', 'Info:', info, 'Features:', up.features);
				},

				UploadFile: function (up, file) {
					log('[UploadFile]', file);

					// You can override settings before the file is uploaded
					// up.setOption('url', 'upload.php?id=' + file.id);
					// up.setOption('multipart_params', {param1 : 'value1', param2 : 'value2'});
				}
			},
			// Post init events, bound after the internal events
			init: {
				PostInit: function () {
					// Called after initialization is finished and internal event handlers bound
					log('[PostInit]');

					document.getElementById('uploadfiles').onclick = function () {
						uploader.start();
						return false;
					};
				},

				Browse: function (up) {
					// Called when file picker is clicked
					log('[Browse]');
				},

				Refresh: function (up) {
					// Called when the position or dimensions of the picker change
					log('[Refresh]');
				},

				StateChanged: function (up) {
					// Called when the state of the queue is changed
					log('[StateChanged]', up.state == plupload.STARTED ? "STARTED" : "STOPPED");
				},

				QueueChanged: function (up) {
					
				},

				OptionChanged: function (up, name, value, oldValue) {
					// Called when one of the configuration options is changed
					log('[OptionChanged]', 'Option Name: ', name, 'Value: ', value, 'Old Value: ', oldValue);
				},

				BeforeUpload: function (up, file) {
					// Called right before the upload for a given file starts, can be used to cancel it if required
					log('[BeforeUpload]', 'File: ', file);
				},

				UploadProgress: function (up, file) {
					// Called while file is being uploaded
					log('[UploadProgress]', 'File:', file, "Total:", up.total);
				},

				FileFiltered: function (up, file) {
					// Called when file successfully files all the filters
					log('[FileFiltered]', 'File:', file);
				},

				FilesAdded: function (up, files) {
					// Called when files are added to queue
					log('[FilesAdded]');

					plupload.each(files, function (file) {
						log('  File:', file);
					});
				},

				FilesRemoved: function (up, files) {
					// Called when files are removed from queue
					log('[FilesRemoved]');

					plupload.each(files, function (file) {
						log('  File:', file);
					});
				},

				FileUploaded: function (up, file, info) {
					// Called when file has finished uploading
					log('[FileUploaded] File:', file, "Info:", info);
				},

				ChunkUploaded: function (up, file, info) {
					// Called when file chunk has finished uploading
					log('[ChunkUploaded] File:', file, "Info:", info);
				},

				UploadComplete: function (up, files) {
					// Called when all files are either uploaded or failed
					log('[UploadComplete]');
				},

				Destroy: function (up) {
					// Called when uploader is destroyed
					log('[Destroy] ');
				},

				Error: function (up, args) {
					// Called when error occurs
					log('[Error] ', args);
				}
			}
		});

		$("#cbxTipoDocumento").change();

		var valuetipo = $("#cbxTipoDocumento").val();

		var url = "@Url.Action("Load", "Trafico", new { tipo="param-id"})";
		url = url.replace("param-id", valuetipo);

		$("#cbxTipoDocumento").on('change', function () {
			var valor = $(this).val();
			url = "@Url.Action("Load", "Trafico", new { tipo="param-id"})";
			url = url.replace("param-id", valor);

			valuetipo = valor;

			uploader = new plupload.Uploader({
				runtimes: 'html5,flash,silverlight',
				browse_button: 'arcivo1',
				container: 'Conten',
				max_file_size: '50mb',
				chunk_size: '50kb',
				url: url,
				flash_swf_url: '@Url.Content("~/Js/plupload")/plupload.flash.swf',
				silverlight_xap_url: '@Url.Content("~/Js/plupload")/plupload.silverlight.xap',
				multi_selection: false,
				multiple_queues: false,
				filters: [{ title: "Archivos PDF", extensions: "pdf" }]
			});

			uploader.bind('FilesAdded', function (up, files) {

			});

			uploader.bind('QueueChanged', function (up, files) {
				if (up.files.length > 0 && uploader.state != 2) {

					alert(url);
					//Verificamos que no sea un documento repetido
					var Repetido = 0;
					$.each(Documentos, function (index, value) {
						if (value.Tipo == $("#cbxTipoDocumento").val() && value.Tipo != 4) {
							Repetido = 1
						}
					});

					if (Repetido > 0) {
						swal({
							title: 'Error',
							text: 'Ya existe un tipo de archivo como el que intenta cargar.',
							icon: 'Error'
						});
					}
					else {
						uploader.start();
					}
				}
			});

			uploader.bind('UploadProgress', function (up, file) {
				$("#spnProgress").text(file.percent + "%");
			});

			uploader.bind('Error', function (up, args) {
				swal("Error", "Lo sentimos el archivo '" + args.file.name + "'no tiene el formato correcto", "error");
			});

			uploader.bind('FileUploaded', function (up, files, info) {
				//Agregamos los datos del archivo
				//Revisamos si el tipo de archivo ya fue agregado a la lista
				// si es el primer archivo no se revisa solo se agrega
				//var Repetido = 0;
				//$.each(Documentos, function (index, value) {
				//	if (value.Tipo == $("#cbxTipoDocumento").val() && value.Tipo != 4) {
				//		Repetido = 1
				//	}
				//});

				//if (Repetido > 0) {
				//	swal({
				//		title: 'Error',
				//		text: 'Ya existe un tipo de archivo como el que intenta cargar.',
				//		icon: 'Error'
				//	});
				//}
				//else {
				AgregarDocumento(files.id, files.name, $("#cbxTipoDocumento").val(), "Comentario1", $('select[name="cbxTipoDocumento"] option:selected').text());

				var VP1 = $('#TableTipoDocumentos').DataTable();

				VP1.destroy();
				$("#DetalleTableTipoDocumentos").html('');
				$.each(Documentos, function (index, value) {
					$("#DetalleTableTipoDocumentos").append('<tr><td style="display:none">' + value.Identifier + '</td><td>' + value.Nombre + '</td><td style="display:none">' + value.Tipo + '</td><td>' + value.NombreTipo.split('|')[0] + '</td><td>' + value.Comentarios + '</td></tr>')
				});

				swal({
					title: 'Operación exitosa',
					text: 'El archivo se agrego a la lista',
					icon: 'success'
				})
				//}
			});

			uploader.init();

		});


		//INICIA CARGA DE ARCHIVOS
		
		$("#cbxTipoDocumento").change();
		//TERMINA CARGA DE ARCHIVOS


		//Wizard
		$('.nav-tabs > li a[title]').tooltip();
		$('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

			var $target = $(e.target);

			if ($target.parent().hasClass('disabled')) {
				return false;
			}
		});

		$(".next-step").click(function (e) {

			var $active = $('.wizard .nav-tabs li.active');
			$active.next().removeClass('disabled');
			nextTab($active);

		});

		$(".GuardarPaso1").click(function (e) {

			if (ContenedorValido) {
				if (pedidos.length > 0) {
					fnExecute("@Url.Action("AgregarContenedor", "Trafico")", function (resp) {

						ValidateResponse(data, function (resp) {
							alert("Alert en el ValidateResponse: " + JSON.stringify(resp))
							csscody.info("El registro del producto ha sido eliminado con éxito");
						});
					});
				}
				else {
					swal("Error", "No tienes pedidos para asociar al contenedor", "error");
				}
			}
			else {
				swal("Error", "Formato no valido para el contenedor", "error");
			}

		});

		$(".prev-step").click(function (e) {

			var $active = $('.wizard .nav-tabs li.active');
			prevTab($active);

		});

		$("#TituloPestana").html("Titulo");
		//Wizard


		//funcion para enviar datos al servidor con formato Json
		var currentId = 0, fnExecute = function (controller, fnResponse) {
			//alert($('#checkPendiente:checked').val());
			//alert($("#fancy-checkbox-primary").val());
			$.post(controller, $.aspMvcParser({
				Contenedor: {
					Sequence: currentId,
					pedidos: pedidos,
					archivos: Documentos,
					revision: $('#checkPendiente:checked').val() == "on" ? true : false
				}
			}), function (data) {
				ValidateResponse(data, fnResponse);
			});
		}

		$("#Contenedor").blur(function () {
			ValidarContenedor();
		});

		$("#btnAsociarContenedor").click(function () {
			if (ContenedorValido) {
				if (pedidos.length > 0) {
					fnExecute("@Url.Action("AgregarContenedor", "Trafico")", function (resp) {

						//alert(JSON.stringify(resp));

						ValidateResponse(data, function (resp) {
							alert("Alert en el ValidateResponse: " + JSON.stringify(resp))
							csscody.info("El registro del producto ha sido eliminado con éxito");
						});
					});
				}
				else {
					swal("Error", "No tienes pedidos para asociar al contenedor", "error");
				}
			}
			else {
				swal("Error", "Formato no valido para el contenedor", "error");
			}

		});
	});

	$("#IdPedido").keypress(function (e) {
		if (e.keyCode == 13) {
			TraerPedidos();
		}
	});

	function BuscarPedidos() {
		TraerPedidos();
	}

	function TraerPedidos() {
		let IdPedido = $('#IdPedido').val();
		$.post('@Url.Action("BuscarPedidos", "Trafico")', {
			IdPedido
		}, function (data) {
			if (data != null && $.isArray(data.Context)) {
				$("#tabla-pedidos").html('');
				$.each(data.Context, function (index, value) {
					$("#tabla-pedidos").append('<tr id="tr-main-' + index + '">\
							<td style="cursor:pointer;"  ondblclick="return showForInsertValues(' + value.Total + ', \'' + value.Contenedor + '\' , \'' + value.CodigoMoneda + '\' , \'' + value.Fecha + '\' , ' + value.Identifier + ', \'' + value.Proveedor + '\')"> ' + value.Identifier + '</td>\
							<td>' + value.Contenedor + '</td>\
							<td>' + value.Proveedor + '</td>\
							<td>' + value.Fecha + '</td>\
							<td>' + value.CodigoMoneda + '</td>\
							<td>' + value.Total + '</td>\
						 </tr>\>');
				});
			} else {
				swal("No se encontraron registros");
			}
		});
	}

	function showForInsertValues(Total, Contenedor, CodigoMoneda, Fecha, Identifier, Proveedor) {
		AgregarPedido(Total, Contenedor, CodigoMoneda, Fecha, Identifier, Proveedor);

		var VP = $('#TablePedidos').DataTable();
		VP.destroy();
		$("#DetalleTablePedidos").html('');
		$.each(pedidos, function (index, value) {
			$("#DetalleTablePedidos").append('<tr><td>' + value.Identifier + '</td><td>' + value.Contenedor + '</td><td>' + value.Proveedor + '</td><td>' + value.Fecha + '</td><td>' + value.CodigoMoneda + '</td><td>' + value.Total + '</td></tr>')
		});
	}

	function ValidarContenedor() {
		if (document.getElementById("Contenedor").value.length < 11) {
			$("#Contenedor").css("border-color", "#dc3545");
			ContenedorValido = false;
		}
		else {
			$("#Contenedor").css("border-color", "#28a745");
			ContenedorValido = true;
		}
	}

	function OnlyNumber(e) {
		tecla = (document.all) ? e.keyCode : e.which;

		if (tecla == 8) {
			return true;
		}

		patron = /[0-9]/;
		tecla_final = String.fromCharCode(tecla);
		return patron.test(tecla_final);
	}

</script>