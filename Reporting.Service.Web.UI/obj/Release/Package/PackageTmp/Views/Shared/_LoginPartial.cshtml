@model Reporting.Service.Web.UI.Models.UserModel
@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    <div class="navbar-custom-menu">
        <ul class="nav navbar-nav">
            <!-- User Account: style can be found in dropdown.less -->
            <li class="dropdown user user-menu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <img src="@Model.CodigoEmpleado" class="user-image" alt="User Image" />
                    <span class="hidden-xs" id='item1'>@Model.Nombre</span>
                </a>
                <ul class="dropdown-menu">
                    <li class="user-header">
                        <img src="@Model.CodigoEmpleado" class="img-circle" alt="User Image">
                        <p>
                            <span>@Model.Nombre</span>
                            <span id="item2">@Model.Area</span>
                            
                            <table id="tabla-roles">
                                <tbody id="tbody-roles">
                                </tbody>
                            </table>
                        </p>
                    </li>

                    <li class="user-footer">
                        <div class="pull-right hidde">
                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "" }))
                            {
                                @Html.AntiForgeryToken()
                                <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-default btn-flat">Salir</a>
                            }
                        </div>
                    </li>
                </ul>
            </li>

        </ul>
    </div>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}

<script>
    var spanValue1 = $('#item1').text();
    var spanValue2 = $('#item2').text();
    $(document).on("click", "#logoutForm", function () {
        localStorage.removeItem('UserEmail');
        localStorage.removeItem('Department');
        localStorage.removeItem('Rol');
        
        var row_count = $('#tabla-roles >tbody >tr').length;
        var index;
        for (index = 0; index < row_count; index++) {
            localStorage.removeItem('multi-rol-'+index);
        }
        
    });
    localStorage.setItem('UserEmail', spanValue1);
    localStorage.setItem('Rol', spanValue2);

    let Email = localStorage.getItem('UserEmail');
    let EmailGet = localStorage.getItem('UserEmail');

    function getRolesByEmail(Email) {
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetUserRolByEmail", "Common")',
            async: false,
            timeout: 3000,
            type: 'POST',
            data: '{"Email":"' + EmailGet + '"}',
            //data: '{"Email":"eduardo_masso@fussionweb.com"}',
            dataType: "json",
        }).done(function (data) {
            if (data != null && $.isArray(data.Context)) {
                $.each(data.Context, function (index, value) {
                    localStorage.setItem('multi-rol-' + index, value.Name);
                    $("#tbody-roles").append(
                        "<tr class='tr-roles-"+index+"'>\
                            <td><span>" + value.Name + "</span></td>\
                         </tr>");
                    });
                }
        }).always(function (data) {
            //console.log("Always executed in api GetUserRolByEmail");
        }).fail(function (data) {
            swal("Error en la api: GetUserRolByEmail");
        });
    }
    getRolesByEmail();
</script>